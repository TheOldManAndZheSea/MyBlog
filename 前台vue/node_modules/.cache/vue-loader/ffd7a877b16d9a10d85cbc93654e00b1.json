{"remainingRequest":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\src\\components\\About.vue?vue&type=template&id=c226fde6&scoped=true&","dependencies":[{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\src\\components\\About.vue","mtime":1648712473269},{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}