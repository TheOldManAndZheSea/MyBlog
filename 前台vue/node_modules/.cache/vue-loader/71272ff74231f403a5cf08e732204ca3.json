{"remainingRequest":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\src\\components\\admin\\charts\\TagChart.vue?vue&type=style&index=0&id=7ab001a1&scoped=true&lang=css&","dependencies":[{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\src\\components\\admin\\charts\\TagChart.vue","mtime":1628309540000},{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jb20tY29udGFpbmVyIHsKICAgIHdpZHRoOiAxMDAlOwogICAgaGVpZ2h0OiAyODRweDsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQoKLmNvbS1jaGFydCB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICBsZWZ0OiA1MCU7CiAgICB0b3A6IDUwJTsKICAgIHdpZHRoOiAxMDAlOwogICAgaGVpZ2h0OiAxMDAlOwp9CgoudGFnIHsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKfQoKLnRhZzpob3ZlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMik7CiAgICBib3JkZXItcmFkaXVzOiA1cHg7Cn0KCi50aXRsZXsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHRvcDogMDsKICAgIGxlZnQ6IDA7CiAgICBtYXJnaW46IDA7Cn0KCmNhbnZhcyB7CiAgICBib3JkZXItcmFkaXVzOiAyMHB4Owp9Cg=="},{"version":3,"sources":["TagChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"TagChart.vue","sourceRoot":"src/components/admin/charts","sourcesContent":["<template>\n    <div class=\"com-container\">\n        <h3 class=\"title\">标签数据</h3>\n        <div class=\"com-chart\" ref=\"tag_ref\">\n            <div class=\"tag\" v-for=\"tag in randerList\" :key=\"tag.id\"\n                 :style=\"{left:tag.x+'px',top:tag.y+'px',color:tag.color,opacity:tag.opacity,filter:tag.filter,fontSize:tag.fontSize+'px',transform: tag.transform}\">\n                {{tag.name}}\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            tagList: [],\n            randerList: [],\n            radius:112,\n            distance : 187\n        }\n    },\n    created() {\n        this.getData()\n    },\n    mounted() {\n        window.addEventListener('resize', this.screenAdapter)\n    },\n    screenAdapter() {\n        this.chartInstance.resize()\n    },\n    methods: {\n\n        compare(property) {\n            return function (a, b) {\n                let value1 = a[property].length;\n                let value2 = b[property].length;\n                return value2 - value1;\n            }\n        },\n        async getData() {\n            const {data: res} = await this.$blog.get('/admin/getFullTagList')\n            this.tagList = res.data.map((item) => {\n                return item['name']\n            })\n            this.initPosition()\n        },\n        // 生成tag的三维坐标\n        initPosition() {\n            let len = this.tagList.length\n            let radius = this.radius//球体半径\n            let distance = this.distance //焦距\n            for (let i = 0; i < len; i++) {\n                let k = (2 * (i + 1) - 1) / len - 1;\n                let a = Math.acos(k)\n                let b = a * Math.sqrt(len * Math.PI);\n                let x = radius * Math.sin(a) * Math.cos(b);\n                let y = radius * Math.sin(a) * Math.sin(b);\n                let z = radius * Math.cos(a)\n                let scale = distance / (distance - z);\n                let fontSize = 12;\n                let color = \"rgb(\" + parseInt(Math.random() * 255) + \",\" + parseInt(Math.random() * 255) + \",\" + parseInt(Math.random() * 255) + \")\";\n                let alpha = (z + radius) / (2 * radius)\n                let opacity = alpha + 0.5\n                let filter = \"alpha(opacity = \" + (alpha + 0.5) * 100 + \")\";\n                this.randerList = this.randerList.concat({\n                    name: this.tagList[i],\n                    x: x,\n                    y: y,\n                    z: z,\n                    color: color,\n                    opacity: opacity,\n                    filter: filter,\n                    fontSize: fontSize\n                })\n            }\n            this.animate()\n        },\n        animate() {\n            this.randerList.forEach(function (item) {\n                let distance = 187\n                let radius = 112\n                let cx = 200\n                let cy = 150\n                let scale = distance / (distance - item.z);\n                let alpha = (item.z + radius) / (2 * radius);\n                let left = item.x + cx;\n                let top = item.y + cy;\n                let transform = 'translate(-50%,-50%) scale(' + scale + ')';\n                item.opacity = alpha + 0.5;\n                item.zIndex = parseInt(scale * 100);\n                item.transform = transform;\n                item.webkitTransform = transform;\n            });\n            this.rotateX();\n            this.rotateY();\n            // console.log(this.randerList)\n            requestAnimationFrame(this.animate);\n        },\n\n        rotateX() {\n            let angleX = Math.PI / 500\n            let angleY = Math.PI / 500\n            let cos = Math.cos(angleX)\n            let sin = Math.sin(angleX)\n            this.randerList.forEach(function(item) {\n                let y1 = item.y * cos - item.z * sin;\n                let z1 = item.z * cos + item.y * sin;\n                item.y = y1;\n                item.z = z1;\n            })\n        },\n        rotateY() {\n            let angleX = Math.PI / 500\n            let angleY = Math.PI / 500\n            let cos = Math.cos(angleY)\n            let sin = Math.sin(angleY)\n            this.randerList.forEach(function(item) {\n                let x1 = item.x * cos - item.z * sin;\n                let z1 = item.z * cos + item.x * sin;\n                item.x = x1;\n                item.z = z1;\n            })\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n    .com-container {\n        width: 100%;\n        height: 284px;\n        position: relative;\n    }\n\n    .com-chart {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        width: 100%;\n        height: 100%;\n    }\n\n    .tag {\n        position: absolute;\n    }\n\n    .tag:hover {\n        background-color: rgba(0, 0, 0, 0.2);\n        border-radius: 5px;\n    }\n\n    .title{\n        position: absolute;\n        top: 0;\n        left: 0;\n        margin: 0;\n    }\n\n    canvas {\n        border-radius: 20px;\n    }\n</style>"]}]}