{"remainingRequest":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\babel-loader\\lib\\index.js!E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\src\\components\\admin\\Projects.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\src\\components\\admin\\Projects.vue","mtime":1628309540000},{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Projects.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <!--    面包屑导航区-->\n    <el-breadcrumb separator=\"/\">\n      <el-breadcrumb-item :to=\"{ path: '/admin' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>项目管理</el-breadcrumb-item>\n    </el-breadcrumb>\n    <el-card shadow=\"hover\">\n      <el-tabs v-model=\"activeName\" type=\"card\" @tab-click=\"handleClick\">\n        <el-tab-pane label=\"发布项目\" name=\"first\">\n          <el-form label-position=\"left\" label-width=\"80px\" style=\"text-align: left\" ref=\"publishFormRef\"\n                   :model=\"publishForm\"\n                   class=\"publish_form\">\n            <el-form-item label=\"项目名称\" prop=\"title\">\n              <el-input v-model=\"publishForm.title\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"项目类型\" prop=\"type\">\n              <el-select v-model=\"publishForm.type\">\n                <el-option v-for=\"item in types\"\n                           :value=\"item.id\"\n                           :label=\"item.name\"\n                           :key=\"item.id\">\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"项目描述\" prop=\"content\">\n              <el-input v-model=\"publishForm.content\" type=\"textarea\" placeholder=\"请输入内容\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"项目图片\">\n              <el-upload\n                      ref=\"upload\"\n                      action=\"http://hikari.top:8090/upload\"\n                      list-type=\"picture-card\"\n                      :limit=\"1\"\n                      :on-preview=\"handlePictureCardPreview\"\n                      :on-remove=\"handleRemove\"\n                      :on-success=\"handleSuccess\">\n                <i class=\"el-icon-plus\"></i>\n              </el-upload>\n              <el-dialog :visible.sync=\"dialogVisible\">\n                <img width=\"100%\" :src=\"dialogImageUrl\" alt=\"\">\n              </el-dialog>\n            </el-form-item>\n            <el-form-item label=\"技术栈\" prop=\"techs\">\n              <el-input v-model=\"publishForm.techs\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"项目地址\" prop=\"url\">\n              <el-input v-model=\"publishForm.url\"></el-input>\n            </el-form-item>\n            <el-form-item style=\"text-align: center\">\n              <el-button type=\"primary\" @click=\"publishProject\">发布</el-button>\n            </el-form-item>\n          </el-form>\n        </el-tab-pane>\n        <el-tab-pane label=\"项目列表\" name=\"second\">\n          <el-table :data=\"projectList\" border stripe>\n            <el-table-column type=\"index\"></el-table-column>\n            <el-table-column label=\"项目名称\" prop=\"title\"></el-table-column>\n            <el-table-column label=\"项目图片\" prop=\"pic_url\">\n              <template slot-scope=\"scope\">\n                <el-image :src=\"scope.row.pic_url\" style=\"width: 100%;max-height: 150px\"></el-image>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"项目类型\" prop=\"type\">\n              <template slot-scope=\"scope\">\n                <el-select v-model=\"scope.row.type\" size=\"small\" @change=\"updateProject(scope.row)\">\n                  <el-option v-for=\"type in types\" :key=\"type.id\" :label=\"type.name\" :value=\"type.id\"></el-option>\n                </el-select>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"项目地址\" prop=\"url\">\n              <template slot-scope=\"scope\">\n                <el-input size=\"small\" v-model=\"scope.row.url\" @blur=\"updateProject(scope.row)\"></el-input>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"项目技术\" prop=\"techs\">\n              <template v-if=\"scope.row.techs!==null\" slot-scope=\"scope\">\n                <el-tag v-for=\"(tag,i) in scope.row.techs.split(',')\" style=\"margin: 3px\" size=\"small\" closable\n                        @close=\"handleClose(i,scope.row)\">{{tag}}\n                </el-tag>\n                <el-input size=\"small\" style=\"width: 100px;\" class=\"input-new-tag\" v-if=\"scope.row.inputVisible\"\n                          v-model=\"scope.row.inputValue\" ref=\"saveInput\"\n                          @keyup.enter.native=\"handleInputConfirm(scope.row)\"\n                          @blur=\"handleInputConfirm(scope.row)\">\n                </el-input>\n                <el-button v-else size=\"mini\" class=\"button-new-tag\" @click=\"showInput(scope.row)\">+ New Tag\n                </el-button>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"操作\">\n              <template slot-scope=\"scope\">\n                <!--            删除按钮-->\n                <el-button\n                        type=\"danger\"\n                        icon=\"el-icon-delete\"\n                        size=\"mini\"\n                        circle\n                        @click=\"removeProjectById(scope.row.id)\"\n                ></el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-tab-pane>\n      </el-tabs>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      project: {\n        id: null,\n        content: \"\",\n        title: \"\",\n        pic_url: \"\",\n        url: \"\",\n        type: 0,\n        techs: \"\"\n      },\n      projectList: [],\n      dialogImageUrl: '',\n      publishForm: {},\n      dialogVisible: false,\n      activeName: 'second',\n      types: [\n        {id: 0, name: '完整项目'},\n        {id: 1, name: '小练习'}\n      ]\n    }\n  },\n  mounted() {\n    this.getProjectList()\n  },\n  methods: {\n    // 点击按钮,展示文本输入框\n    showInput(row) {\n      row.inputVisible = true\n      //   让输入框自动获取焦点\n      // $nextTick方法的作用：当页面元素被重新渲染之后，才会至指定回调函数中的代码\n      this.$nextTick(_ => {\n        this.$refs.saveInput.$refs.input.focus()\n      })\n    },\n    // 确认输入\n    handleInputConfirm(row) {\n      row.techs += ','+row.inputValue\n      row.inputValue = ''\n      row.inputVisible = false\n      this.updateProject(row)\n    },\n    // 去掉技术\n    handleClose(i, row) {\n      let tags = row.techs.split(',')\n      tags.splice(i, 1)\n      row.techs = tags.join(',')\n      this.updateProject(row)\n    },\n    // 点击tab时的事件\n    handleClick(tab, event) {\n      if (tab.name === 'second') {\n        this.getProjectList()\n      }\n    },\n    // 删除图片\n    handleRemove() {\n      this.dialogImageUrl = ''\n    },\n    // 预览图片\n    handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n    // 图片上传成功\n    async handleSuccess(res) {\n      this.dialogImageUrl = res.data\n    },\n    // 清空状态\n    backPage() {\n      this.$refs.upload.clearFiles()\n      this.blog.firstPicture = ''\n      this.$refs.publishFormRef.resetFields()\n    },\n    // 发布项目\n    async publishProject() {\n      this.project.pic_url = this.dialogImageUrl\n      this.project.title = this.publishForm.title\n      this.project.content = this.publishForm.content\n      this.project.url = this.publishForm.url\n      this.project.techs = this.publishForm.techs\n      this.project.type = this.publishForm.type\n      const {data: res} = await this.$blog.post('/admin/project', {\n        project: this.project\n      })\n      if (res.code === 200) {\n        return this.$message.success('项目发布成功！')\n      } else {\n        return this.$message.error('项目发布失败！')\n      }\n    },\n    // 获取项目列表\n    async getProjectList() {\n      const {data: res} = await this.$blog.get('/admin/projects')\n      if (res.code !== 200) {\n        return this.$message.error('获取项目列表失败！')\n      }\n      res.data.forEach(item => {\n        // 控制文本框的显示与隐藏\n        item.inputVisible = false\n        // 文本框中输入的值\n        item.inputValue = ''\n        // 控制网址是否可编辑\n        item.inputUrlVisiable = false\n      })\n      this.projectList = res.data\n    },\n    // 删除项目\n    async removeProjectById(id) {\n      // 弹出对话框\n      const confirmResult = await this.$confirm(\n          '确定要删除该项目吗',\n          '提示',\n          {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }\n      ).catch(err => err)\n      if (confirmResult !== 'confirm') {\n        return this.$message.info('已取消删除')\n      }\n      const {data: res} = await this.$blog.get(`/admin/project/${id}/delete`)\n      if (res.code === 200) {\n        await this.getProjectList()\n        return this.$message.success('项目删除成功！')\n      } else {\n        return this.$message.error('项目删除失败！')\n      }\n    },\n    // 更新项目\n    async updateProject(row) {\n      const {data: res} = await this.$blog.post('/admin/project', {\n        project: row\n      })\n      if (res.code === 200) {\n        return this.$message.success('项目更新成功！')\n      } else {\n        return this.$message.error('项目更新失败！')\n      }\n    }\n  }\n\n}\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components/admin"}]}