{"remainingRequest":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\thread-loader\\dist\\cjs.js!E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\babel-loader\\lib\\index.js!E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\src\\components\\admin\\charts\\VisitorMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\src\\components\\admin\\charts\\VisitorMap.vue","mtime":1628309540000},{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["VisitorMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"com-container\">\n    <div class=\"com-chart\" ref=\"visit_ref\">\n    </div>\n  </div>\n</template>\n\n<script>\nimport 'echarts/lib/component/geo'\nimport 'echarts/lib/chart/map'\nimport 'echarts/lib/component/visualMap'\n\nexport default {\n  data() {\n    return {\n      chartInstance: null,\n      allData: [],\n      mapData: {}, //所获取的省份的地图矢量的缓存\n    }\n  },\n  mounted() {\n    this.initChart()\n    this.getData()\n    window.addEventListener('resize', this.screenAdapter)\n    this.screenAdapter()\n  },\n  methods: {\n    screenAdapter() {\n      this.chartInstance.resize()\n    },\n    async initChart() {\n      this.chartInstance = this.$echarts.init(this.$refs.visit_ref, this.theme)\n      const res = require('@/assets/map/china.json')\n      this.$echarts.registerMap('china', res)\n      const initOption = {\n        title:{\n          text: '用户来源'\n        },\n        geo: {\n          type: 'map',\n          roam: true, // 鼠标滑动放大缩小\n          map: 'china',\n        },\n        // '<img src=\"'+lt.avatar+'\"/>'\n        tooltip: {\n          trigger: 'item',\n          formatter: function (params) {\n            let html = ''\n            if (!params.data) return html\n            for (const lt of params.data.users){\n              html+='<div style=\"display: flex;align-items: center\"><img style=\"width: 18px;border-radius: 50%\" src=\"'+lt.avatar+'\"/><span style=\"font-size: x-small;margin-left: 5px\">'+lt.nickname+'</span></div> '\n            }\n            return html\n          }\n        },\n        legend: {\n          left: '5%',\n          bottom: '5%',\n          orient: 'vertical'\n        },\n        visualMap: {\n          itemWidth: 4,\n          min: 0,\n          max: 50,\n          hoverLink: false,\n          textStyle: {\n            color: 'rgba(0,0,0,0.65)'\n          },\n          pieces: [{\n            gte: 50,\n            label: '>= 50',\n            color: '#FF7C32'\n          }, {\n            gte: 30,\n            lte: 49,\n            label: '30 - 49',\n            color: '#FDCC1A'\n          }, {\n            gte: 10,\n            lte: 29,\n            label: '10 - 29',\n            color: '#5AD7D8'\n          }, {\n            gte: 1,\n            lte: 9,\n            label: '1 - 9',\n            color: '#4174fe'\n          }, {\n            gte: 0,\n            lte: 0,\n            label: '0',\n            value: 0,\n            color: '#f5f5f5'\n          }\n          ]\n        },\n        series: [{\n          type: 'map',\n          geoIndex: 0,\n          data: []\n        }]\n\n      }\n      this.chartInstance.setOption(initOption)\n    },\n    async getData() {\n      const {data: res} = await this.$blog.get('/admin/getUserAreaList');\n      if (res.code === 200) {\n        let list = {}\n        res.data.forEach((item) => {\n          if (typeof list[item.loginProvince] === 'undefined') {\n            list[item.loginProvince] = [item]\n          } else {\n            list[item.loginProvince].push(item)\n          }\n        })\n        Object.entries(list).forEach((item) => {\n          this.allData.push({name: item[0], value: item[1].length,users:item[1]})\n        })\n        setTimeout(() => {\n          this.updateChart()\n        },300)\n\n      } else {\n        this.$message.error('获取用户数据错误!')\n      }\n    },\n    updateChart() {\n      const dataOption = {\n        series: [{\n          data: this.allData\n        }]\n      }\n      this.chartInstance.setOption(dataOption)\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"less\">\n  .com-container {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n  }\n\n  .com-chart {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n  }\n\n</style>"],"sourceRoot":"src/components/admin/charts"}]}