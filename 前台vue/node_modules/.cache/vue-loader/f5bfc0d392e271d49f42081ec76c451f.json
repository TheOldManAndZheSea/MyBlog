{"remainingRequest":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\src\\components\\admin\\charts\\BlogChart.vue?vue&type=style&index=0&id=28045878&scoped=true&lang=less&","dependencies":[{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\src\\components\\admin\\charts\\BlogChart.vue","mtime":1628309540000},{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\文档\\张天赐\\练习代码\\VSCode\\个人博客\\前台\\myblog-frontend-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jb20tY29udGFpbmVyIHsKICAgIHdpZHRoOiAxMDAlOwogICAgaGVpZ2h0OiAxMDAlOwogICAgb3ZlcmZsb3c6IGhpZGRlbjsKfQoKLmNvbS1jaGFydCB7CiAgICB3aWR0aDogMTAwJTsKICAgIGhlaWdodDogMTAwJTsKICAgIG92ZXJmbG93OiBoaWRkZW47Cn0KCmNhbnZhcyB7CiAgICBib3JkZXItcmFkaXVzOiAyMHB4Owp9Cg=="},{"version":3,"sources":["BlogChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkOA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"BlogChart.vue","sourceRoot":"src/components/admin/charts","sourcesContent":["<template>\n    <div class=\"com-container\">\n        <div class=\"com-chart\" ref=\"blog_ref\">\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    props: ['psMsg'],\n    data() {\n        return {\n            countByMonth: [],\n            commentCountByMonth: [],\n            chartInstance: null,\n            xAxisData: [],\n            seriesData: [],\n            timeList: [],\n            selectList: ['阅读量','文章数','点赞数','评论数'],\n        }\n    },\n    mounted() {\n        this.initChart()\n        this.getViewsData()\n        window.addEventListener('resize', this.screenAdapter)\n    },\n    watch: {\n        'psMsg': {\n            handler(value) {\n                if (value === 0) {\n                    this.getViewsData()\n                } else if (value === 1) {\n                    this.getBlogData()\n                } else if (value === 2) {\n                    this.getAppreciateCountByMonth()\n                } else if(value === 3){\n                    this.getCommentCountByMonth()\n                }\n            }\n        }\n    },\n    methods: {\n        initChart() {\n            this.chartInstance = this.$echarts.init(this.$refs.blog_ref, this.theme)\n            const initOption = {\n                backgroundColor: '#fff',\n\n                legend: {\n                    // orient 设置布局方式，默认水平布局，可选值：'horizontal'（水平） ¦ 'vertical'（垂直）\n                    orient: 'horizontal',\n                    // x 设置水平安放位置，默认全图居中，可选值：'center' ¦ 'left' ¦ 'right' ¦ {number}（x坐标，单位px）\n                    x: 'center',\n                    // y 设置垂直安放位置，默认全图顶端，可选值：'top' ¦ 'bottom' ¦ 'center' ¦ {number}（y坐标，单位px）\n                    y: 'top',\n                    data: ['阅读量']\n                },\n\n                //  图表距边框的距离,可选值：'百分比'¦ {number}（单位px）\n                grid: {\n                    top: '3%',   // 等价于 y: '16%'\n                    left: '3%',\n                    right: '3%',\n                    bottom: '3%',\n                    containLabel: true\n                },\n\n                // 提示框\n                tooltip: {\n                    trigger: 'axis',\n                    axisPointer: {\n                        type: 'cross'\n                    },\n                    padding: [5, 10]\n                },\n                axisPointer: { // 坐标轴指示器，坐标轴触发有效\n                    type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n                },\n                xAxis: {\n                    name: '周几',\n                    type: 'category',\n                    // 设置X轴数据旋转倾斜\n                    axisLabel: {\n                        rotate: 20, // 旋转角度\n                        interval: 0  //设置X轴数据间隔几个显示一个，为0表示都显示\n                    },\n                    // boundaryGap值为false的时候，折线第一个点在y轴上\n                    boundaryGap: false,\n                    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n                },\n\n                yAxis: {\n                    name: '数值',\n                    type: 'value',\n                },\n\n                series: [\n                    {\n                        name: '阅读量',\n                        data: [820, 932, 301, 1434, 1290, 1330, 1320],\n                        type: 'line',\n                        // 设置小圆点消失\n                        // 注意：设置symbol: 'none'以后，拐点不存在了，设置拐点上显示数值无效\n                        symbol: 'none',\n                        // 设置折线弧度，取值：0-1之间\n                        smooth: 0.5,\n                        itemStyle: {\n                            normal: {\n                                color: '#3888fa',\n                                lineStyle: {\n                                    color: '#3888fa',\n                                    width: 2\n                                },\n                                areaStyle: {\n                                    color: '#f3f8ff'\n                                }\n                            }\n                        },\n                        animationDuration: 2800,\n                        animationEasing: 'cubicInOut'\n                    },\n\n                ],\n            }\n            this.chartInstance.setOption(initOption)\n        },\n        async getViewsData() {\n            const {data: res} = await this.$blog.get('/admin/getViewCountByMonth')\n            let list = []\n            res.data.forEach((item) => {\n                let ls = item.split(',')\n                list = list.concat({date: ls[0], views: ls[1]})\n            })\n            this.countByMonth = list\n            this.updateChart()\n        },\n        async getBlogData() {\n            const {data: res} = await this.$blog.get('/admin/getBlogCountByMonth')\n            let list = []\n            res.data.forEach((item) => {\n                let ls = item.split(',')\n                list = list.concat({date: ls[0], views: ls[1]})\n            })\n            // console.log(res.data)\n            this.countByMonth = list\n            this.updateChart()\n        },\n        async getAppreciateCountByMonth() {\n            const {data: res} = await this.$blog.get('/admin/getAppreciateCountByMonth')\n            let list = []\n            res.data.forEach((item) => {\n                let ls = item.split(',')\n                list = list.concat({date: ls[0], views: ls[1]})\n            })\n            this.countByMonth = list\n            // console.log(res.data)\n            this.updateChart()\n        },\n        async getCommentCountByMonth() {\n            const {data: res} = await this.$blog.get('/admin/getCommentCountByMonth')\n            let list = []\n            res.data.forEach((item) => {\n                let ls = item.split(',')\n                list = list.concat({date: ls[0], views: ls[1]})\n            })\n            this.countByMonth = list\n            // console.log(res.data)\n            this.updateChart()\n        },\n        dateFormat2(originVal) {\n            const dt = new Date(originVal)\n            const y = dt.getFullYear()\n            const m = (dt.getMonth() + 1 + '').padStart(2, '0')\n            return `${y}-${m}`\n        },\n        getTimeList() {\n            let time = new Date()\n            let month = time.getMonth()\n            let year = time.getFullYear()\n            let dateList = []\n            for (let i = 0; i < 7; i++) {\n                dateList = dateList.concat(this.dateFormat2(time))\n                if (month === 0) {\n                    month = 11;\n                    year = year - 1;\n                } else {\n                    month = month - 1;\n                }\n                time.setFullYear(year)\n                time.setMonth(month)\n            }\n            this.timeList = dateList.reverse()\n        },\n        updateChart() {\n            this.getTimeList()\n            this.xAxisData = this.timeList\n            let sl = []\n            for (const item of this.timeList) {\n                let a = this.countByMonth.find(i => i.date === item)\n                sl = sl.concat(a === undefined ? 0 : a.views)\n            }\n            this.seriesData = sl\n            const dataOption = {\n                legend: {\n                    data: [this.selectList[this.psMsg]]\n                },\n                xAxis: {\n                    data: this.xAxisData\n                },\n                series: [\n                    {\n                        name: this.selectList[this.psMsg],\n                        data: this.seriesData\n                    }\n                ]\n            }\n            this.chartInstance.setOption(dataOption)\n        },\n        screenAdapter() {\n            this.chartInstance.resize()\n        },\n    }\n}\n</script>\n\n<style scoped lang=\"less\">\n\n    .com-container {\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n    }\n\n    .com-chart {\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n    }\n\n    canvas {\n        border-radius: 20px;\n    }\n</style>"]}]}